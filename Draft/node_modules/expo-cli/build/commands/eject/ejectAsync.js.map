{"version":3,"sources":["../../../src/commands/eject/ejectAsync.ts"],"names":["ejectAsync","projectRoot","platforms","options","results"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA;;;;;;;AAOO,eAAeA,UAAf,CACLC,WADK,EAEL;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAFK,EAGU;AACf,0CAAgBD,SAAhB;AAEA,MAAI,MAAM,2CAAV,EAAuC;AACvC,QAAM,oEAA0CD,WAA1C,CAAN;AAEA,QAAMG,OAAO,GAAG,MAAM,oCAAcH,WAAd,EAA2B;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAA3B,CAAtB;AACA,oCAAaC,OAAb;AACD","sourcesContent":["import maybeBailOnGitStatusAsync from '../utils/maybeBailOnGitStatusAsync';\nimport { promptToClearMalformedNativeProjectsAsync } from './clearNativeFolder';\nimport { logNextSteps } from './logNextSteps';\nimport { assertPlatforms } from './platformOptions';\nimport { EjectAsyncOptions, prebuildAsync } from './prebuildAsync';\n\n/**\n * Entry point into the eject process, delegates to other helpers to perform various steps.\n *\n * 1. Verify git is clean\n * 2. Prebuild the project\n * 3. Log project info\n */\nexport async function ejectAsync(\n  projectRoot: string,\n  { platforms, ...options }: EjectAsyncOptions\n): Promise<void> {\n  assertPlatforms(platforms);\n\n  if (await maybeBailOnGitStatusAsync()) return;\n  await promptToClearMalformedNativeProjectsAsync(projectRoot);\n\n  const results = await prebuildAsync(projectRoot, { platforms, ...options });\n  logNextSteps(results);\n}\n"],"file":"ejectAsync.js"}