{"version":3,"sources":["../../../src/commands/eject/logNextSteps.ts"],"names":["logNextSteps","hasAssetBundlePatterns","hasNewProjectFiles","legacyUpdates","platforms","podInstall","nodeInstall","packageManager","Log","newLine","nested","chalk","bold","WarningAggregator","hasWarningsIOS","hasWarningsAndroid","installCmd","dim","fallback","text","includes"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAGO,SAASA,YAAT,CAAsB;AAC3BC,EAAAA,sBAD2B;AAE3BC,EAAAA,kBAF2B;AAG3BC,EAAAA,aAH2B;AAI3BC,EAAAA,SAJ2B;AAK3BC,EAAAA,UAL2B;AAM3BC,EAAAA,WAN2B;AAO3BC,EAAAA;AAP2B,CAAtB,EAQa;AAClBC,iBAAIC,OAAJ;;AACAD,iBAAIE,MAAJ,CAAY,OAAMC,iBAAMC,IAAN,CAAW,YAAX,CAAyB,EAA3C;;AAEA,MAAIC,mCAAkBC,cAAlB,MAAsCD,mCAAkBE,kBAAlB,EAA1C,EAAkF;AAChFP,mBAAIE,MAAJ,CACG,4FADH;AAGD,GARiB,CAUlB;;;AACA,MAAIJ,WAAJ,EAAiB;AACf,UAAMU,UAAU,GAAGT,cAAc,KAAK,KAAnB,GAA2B,aAA3B,GAA2C,MAA9D;;AACAC,mBAAIE,MAAJ,CAAY,oCAAmCF,eAAIG,KAAJ,CAAUC,IAAV,CAAeI,UAAf,CAA2B,EAA1E;AACD;;AACD,MAAIX,UAAJ,EAAgB;AACdG,mBAAIE,MAAJ,CACG,4EAA2EC,iBAAMC,IAAN,CAC1E,iBAD0E,CAE1E,EAHJ;AAKD;;AACDJ,iBAAIE,MAAJ,CACG,iCAAgCC,iBAAMC,IAAN,CAC/B,wCAD+B,CAE/B,gFAHJ;;AAKAJ,iBAAIE,MAAJ,CACG,+GAA8GC,iBAAMC,IAAN,CAC7G,6BAD6G,CAE7G,EAHJ;;AAMA,MAAIX,sBAAJ,EAA4B;AAC1BO,mBAAIE,MAAJ,CACG,0BAAyBC,iBAAMC,IAAN,CACvB,qBADuB,CAExB,2DAA0DJ,eAAIG,KAAJ,CAAUM,GAAV,CAC1D,+BAAU,+DAAV,CAD0D,CAE1D,EALJ;AAOD;;AAED,MAAId,aAAJ,EAAmB;AACjBK,mBAAIE,MAAJ,CACG,aAAD,CACG,6BACC,cADD,EAEC,0EAFD,GAID;AACEQ,MAAAA,QAAQ,EAAGC,IAAD,IAAkBA;AAD9B,KALF,CAQC,0FAAyFR,iBAAMC,IAAN,CACxF,cADwF,CAExF,KAAIJ,eAAIG,KAAJ,CAAUM,GAAV,CAAc,+BAAU,mDAAV,CAAd,CAA8E,EAXtF;AAaD;;AAED,MAAIf,kBAAJ,EAAwB;AACtBM,mBAAIC,OAAJ;;AACAD,mBAAIE,MAAJ,CAAY,OAAMC,iBAAMC,IAAN,CAAW,wCAAX,CAAqD,EAAvE;;AACAJ,mBAAIE,MAAJ,CACE,wFADF;;AAIA,QAAIN,SAAS,CAACgB,QAAV,CAAmB,KAAnB,CAAJ,EAA+B;AAC7BZ,qBAAIE,MAAJ,CAAY,UAASC,iBAAMC,IAAN,CAAWL,cAAc,KAAK,KAAnB,GAA2B,aAA3B,GAA2C,UAAtD,CAAkE,EAAvF;AACD;;AAED,QAAIH,SAAS,CAACgB,QAAV,CAAmB,SAAnB,CAAJ,EAAmC;AACjCZ,qBAAIE,MAAJ,CACG,UAASC,iBAAMC,IAAN,CAAWL,cAAc,KAAK,KAAnB,GAA2B,iBAA3B,GAA+C,cAA1D,CAA0E,EADtF;AAGD;;AAEDC,mBAAIE,MAAJ,CAAY,UAASC,iBAAMC,IAAN,CAAWL,cAAc,KAAK,KAAnB,GAA2B,aAA3B,GAA2C,UAAtD,CAAkE,EAAvF;AACD;AACF","sourcesContent":["import { WarningAggregator } from '@expo/config-plugins';\nimport chalk from 'chalk';\nimport terminalLink from 'terminal-link';\n\nimport Log from '../../log';\nimport { learnMore } from '../utils/TerminalLink';\nimport { PrebuildResults } from './prebuildAsync';\n\nexport function logNextSteps({\n  hasAssetBundlePatterns,\n  hasNewProjectFiles,\n  legacyUpdates,\n  platforms,\n  podInstall,\n  nodeInstall,\n  packageManager,\n}: PrebuildResults) {\n  Log.newLine();\n  Log.nested(`‚û°Ô∏è  ${chalk.bold('Next steps')}`);\n\n  if (WarningAggregator.hasWarningsIOS() || WarningAggregator.hasWarningsAndroid()) {\n    Log.nested(\n      `\\u203A üëÜ Review the logs above and look for any warnings (‚ö†Ô∏è ) that might need follow-up.`\n    );\n  }\n\n  // Log a warning about needing to install node modules\n  if (nodeInstall) {\n    const installCmd = packageManager === 'npm' ? 'npm install' : 'yarn';\n    Log.nested(`\\u203A ‚ö†Ô∏è  Install node modules: ${Log.chalk.bold(installCmd)}`);\n  }\n  if (podInstall) {\n    Log.nested(\n      `\\u203A üç´ When CocoaPods is installed, initialize the project workspace: ${chalk.bold(\n        'npx pod-install'\n      )}`\n    );\n  }\n  Log.nested(\n    `\\u203A üí° You may want to run ${chalk.bold(\n      'npx @react-native-community/cli doctor'\n    )} to help install any tools that your app may need to run your native projects.`\n  );\n  Log.nested(\n    `\\u203A üîë Download your Android keystore (if you're not sure if you need to, just run the command and see): ${chalk.bold(\n      'expo fetch:android:keystore'\n    )}`\n  );\n\n  if (hasAssetBundlePatterns) {\n    Log.nested(\n      `\\u203A üìÅ The property ${chalk.bold(\n        `assetBundlePatterns`\n      )} does not have the same effect in the bare workflow.\\n  ${Log.chalk.dim(\n        learnMore('https://docs.expo.io/bare/updating-your-app/#embedding-assets')\n      )}`\n    );\n  }\n\n  if (legacyUpdates) {\n    Log.nested(\n      `\\u203A üöÄ ${\n        (terminalLink(\n          'expo-updates',\n          'https://github.com/expo/expo/blob/master/packages/expo-updates/README.md'\n        ),\n        {\n          fallback: (text: string) => text,\n        })\n      } has been configured in your project. Before you do a release build, make sure you run ${chalk.bold(\n        'expo publish'\n      )}. ${Log.chalk.dim(learnMore('https://expo.fyi/release-builds-with-expo-updates'))}`\n    );\n  }\n\n  if (hasNewProjectFiles) {\n    Log.newLine();\n    Log.nested(`‚òëÔ∏è  ${chalk.bold('When you are ready to run your project')}`);\n    Log.nested(\n      'To compile and run your project in development, execute one of the following commands:'\n    );\n\n    if (platforms.includes('ios')) {\n      Log.nested(`\\u203A ${chalk.bold(packageManager === 'npm' ? 'npm run ios' : 'yarn ios')}`);\n    }\n\n    if (platforms.includes('android')) {\n      Log.nested(\n        `\\u203A ${chalk.bold(packageManager === 'npm' ? 'npm run android' : 'yarn android')}`\n      );\n    }\n\n    Log.nested(`\\u203A ${chalk.bold(packageManager === 'npm' ? 'npm run web' : 'yarn web')}`);\n  }\n}\n"],"file":"logNextSteps.js"}