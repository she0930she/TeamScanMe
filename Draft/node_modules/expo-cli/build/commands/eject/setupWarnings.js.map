{"version":3,"sources":["../../../src/commands/eject/setupWarnings.ts"],"names":["warnIfDependenciesRequireAdditionalSetup","pkg","sdkVersion","appliedPlugins","warnings","getSetupWarnings","autoPlugins","expoManagedPlugins","logSetupWarnings","pkgsWithExtraSetup","filter","plugin","includes","reduce","prev","curr","semver","lte","chalk","bold","Log","dim","Object","keys","dependencies","key","warningLength","length","newLine","warnAdditionalSetupStep","CreateApp","logNewSection","plural","stopAndPersist","symbol","text","yellow","pkgName","message","entries","nested"],"mappings":"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","sourcesContent":["import { PackageJSONConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport semver from 'semver';\n\nimport Log from '../../log';\nimport * as CreateApp from '../utils/CreateApp';\nimport { learnMore } from '../utils/TerminalLink';\nimport { expoManagedPlugins } from './configureProjectAsync';\n\n/**\n * Some packages are not configured automatically on eject and may require\n * users to add some code, eg: to their AppDelegate.\n */\nexport function warnIfDependenciesRequireAdditionalSetup(\n  pkg: PackageJSONConfig,\n  sdkVersion?: string,\n  appliedPlugins?: string[]\n): Record<string, string> {\n  const warnings = getSetupWarnings({\n    pkg,\n    sdkVersion,\n    appliedPlugins: appliedPlugins ?? [],\n    autoPlugins: expoManagedPlugins,\n  });\n\n  logSetupWarnings(warnings);\n\n  return warnings;\n}\n\n// Exposed for testing\nexport function getSetupWarnings({\n  pkg,\n  sdkVersion,\n  appliedPlugins,\n  autoPlugins,\n}: {\n  pkg: PackageJSONConfig;\n  sdkVersion?: string;\n  appliedPlugins: string[];\n  autoPlugins: string[];\n}): Record<string, string> {\n  const pkgsWithExtraSetup = autoPlugins\n    .filter(plugin => !appliedPlugins?.includes(plugin))\n    .reduce<Record<string, string>>(\n      (prev, curr) => ({\n        ...prev,\n        [curr]: `https://github.com/expo/expo/tree/master/packages/${curr}`,\n      }),\n      {}\n    );\n\n  // Starting with SDK 40 the manifest is embedded in ejected apps automatically\n  if (sdkVersion && semver.lte(sdkVersion, '39.0.0')) {\n    pkgsWithExtraSetup['expo-constants'] = `${chalk.bold(\n      'Constants.manifest'\n    )} is not available in the bare workflow. You should replace it with ${chalk.bold(\n      'Updates.manifest'\n    )}. ${Log.chalk.dim(\n      learnMore('https://docs.expo.io/versions/latest/sdk/updates/#updatesmanifest')\n    )}`;\n  }\n\n  const warnings = Object.keys(pkg.dependencies).reduce<Record<string, string>>((prev, key) => {\n    if (!(key in pkgsWithExtraSetup)) {\n      return prev;\n    }\n    return {\n      ...prev,\n      [key]: pkgsWithExtraSetup[key],\n    };\n  }, {});\n\n  return warnings;\n}\n\nfunction logSetupWarnings(warnings: Record<string, string>) {\n  const warningLength = Object.keys(warnings).length;\n  if (!warningLength) {\n    return;\n  }\n\n  Log.newLine();\n  const warnAdditionalSetupStep = CreateApp.logNewSection(\n    'Checking if any additional setup steps are required for installed SDK packages.'\n  );\n\n  const plural = warningLength > 1;\n\n  warnAdditionalSetupStep.stopAndPersist({\n    symbol: '⚠️ ',\n    text: chalk.yellow.bold(\n      `The app has ${warningLength} package${plural ? 's' : ''} that require${\n        plural ? '' : 's'\n      } extra setup before building:`\n    ),\n  });\n\n  for (const [pkgName, message] of Object.entries(warnings)) {\n    Log.nested(`\\u203A ${chalk.bold(pkgName)}: ${message}`);\n  }\n}\n"],"file":"setupWarnings.js"}