{"version":3,"sources":["../../src/commands/upload.ts"],"names":["program","command","alias","description","helpGroup","option","asyncActionProjectDir","projectDir","options","useSubmissionService","Log","warn","ctx","AndroidSubmitCommand","createContext","runAsync","chalk","yellow","bold","longDescription","logItem","name","link","log","TerminalLink","linkedText","newLine","cyan"],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport { Command } from 'commander';\n\nimport Log from '../log';\nimport AndroidSubmitCommand from './upload/submission-service/android/AndroidSubmitCommand';\nimport { AndroidSubmitCommandOptions } from './upload/submission-service/android/types';\nimport * as TerminalLink from './utils/TerminalLink';\n\nexport default function (program: Command) {\n  program\n    .command('upload:android [path]')\n    .alias('ua')\n    .description('Upload an Android binary to the Google Play Store')\n    .helpGroup('upload')\n    .option('--latest', 'upload the latest build')\n    .option('--id <id>', 'id of the build to upload')\n    .option('--path [path]', 'path to the .apk/.aab file')\n    .option('--url <url>', 'app archive url')\n    .option('--key <key>', 'path to the JSON key used to authenticate with Google Play')\n    .option(\n      '--android-package <android-package>',\n      'Android package name (using expo.android.package from app.json by default)'\n    )\n    .option('--type <archive-type>', 'archive type: apk, aab', /^(apk|aab)$/i)\n    .option(\n      '--track <track>',\n      'the track of the application to use, choose from: production, beta, alpha, internal, rollout',\n      /^(production|beta|alpha|internal|rollout)$/i,\n      'internal'\n    )\n    .option(\n      '--release-status <release-status>',\n      'release status (used when uploading new apks/aabs), choose from: completed, draft, halted, inProgress',\n      /^(completed|draft|halted|inProgress)$/i,\n      'completed'\n    )\n    .option(\n      '--use-submission-service',\n      'Experimental: Use Submission Service for uploading your app. The upload process will happen on Expo servers.'\n    )\n    .option('--verbose', 'Always print logs from Submission Service')\n    // TODO: make this work outside the project directory (if someone passes all necessary options for upload)\n    .asyncActionProjectDir(async (projectDir: string, options: AndroidSubmitCommandOptions) => {\n      if (options.useSubmissionService) {\n        Log.warn(\n          '\\n`--use-submission-service is now the default and the flag will be deprecated in the future.`'\n        );\n      }\n      const ctx = AndroidSubmitCommand.createContext(projectDir, options);\n      const command = new AndroidSubmitCommand(ctx);\n      await command.runAsync();\n    });\n\n  program\n    .command('upload:ios [path]')\n    .alias('ui')\n    .description(\n      `${chalk.yellow('Unsupported:')} Use ${chalk.bold('eas submit')} or Transporter app instead.`\n    )\n    .longDescription(\n      'Upload an iOS binary to Apple TestFlight (MacOS only). Uses the latest build by default'\n    )\n    .helpGroup('upload')\n    .option('--latest', 'upload the latest build (default)')\n    .option('--id <id>', 'id of the build to upload')\n    .option('--path [path]', 'path to the .ipa file')\n    .option('--url <url>', 'app archive url')\n    .option(\n      '--apple-id <apple-id>',\n      'your Apple ID username (you can also set EXPO_APPLE_ID env variable)'\n    )\n    // apple unified App Store Connect and Developer Portal teams, this is temporary solution until fastlane implements those changes\n    // https://github.com/fastlane/fastlane/issues/14229\n    // after updating fastlane this value will be unnecessary\n    .option(\n      '--itc-team-id <itc-team-id>',\n      'App Store Connect Team ID - this option is deprecated, the proper ID is resolved automatically'\n    )\n    .option(\n      '--apple-id-password <apple-id-password>',\n      'your Apple ID password (you can also set EXPO_APPLE_PASSWORD env variable)'\n    )\n    .option(\n      '--app-name <app-name>',\n      `the name of your app as it will appear on the App Store, this can't be longer than 30 characters (default: expo.name from app.json)`\n    )\n    .option(\n      '--company-name <company-name>',\n      'the name of your company, needed only for the first upload of any app to App Store'\n    )\n    .option(\n      '--sku <sku>',\n      'a unique ID for your app that is not visible on the App Store, will be generated unless provided'\n    )\n    .option(\n      '--language <language>',\n      `primary language (e.g. English, German; run \\`expo upload:ios --help\\` to see the list of available languages)`,\n      'English'\n    )\n    .option('--public-url <url>', 'The URL of an externally hosted manifest (for self-hosted apps)')\n    // TODO: make this work outside the project directory (if someone passes all necessary options for upload)\n    .asyncActionProjectDir(async (projectDir: string, options: any) => {\n      const logItem = (name: string, link: string) => {\n        Log.log(`\\u203A ${TerminalLink.linkedText(name, link)}`);\n      };\n\n      Log.newLine();\n      Log.log(chalk.yellow('expo upload:ios is no longer supported'));\n      Log.log('Please use one of the following');\n      Log.newLine();\n      logItem(chalk.cyan.bold('eas submit'), 'https://docs.expo.io/submit/ios');\n      logItem('Transporter', 'https://apps.apple.com/us/app/transporter/id1450874784');\n      logItem(\n        'Fastlane deliver',\n        'https://docs.fastlane.tools/getting-started/ios/appstore-deployment'\n      );\n      Log.newLine();\n    });\n}\n"],"file":"upload.js"}