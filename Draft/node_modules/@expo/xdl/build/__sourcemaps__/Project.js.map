{"version":3,"sources":["Project.ts"],"names":["setOptionsAsync","projectRoot","options","packagerPort","Number","isInteger","XDLError","ProjectSettings","setPackagerInfoAsync","currentStatus","getCurrentStatusAsync"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAKA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAoCA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;AArCA;;;;;AAKO,eAAeA,eAAf,CACLC,WADK,EAELC,OAFK,EAKU;AACf,wCAAuBD,WAAvB,EADe,CACsB;;AACrC,MAAIC,OAAO,CAACC,YAAR,IAAwB,IAAxB,IAAgC,CAACC,MAAM,CAACC,SAAP,CAAiBH,OAAO,CAACC,YAAzB,CAArC,EAA6E;AAC3E,UAAM,KAAIG,mBAAJ,EAAa,iBAAb,EAAgC,iCAAhC,CAAN;AACD;;AACD,QAAMC,eAAe,GAACC,oBAAhB,CAAqCP,WAArC,EAAkDC,OAAlD,CAAN;AACD;AAED;;;;;;AAIO,eAAeO,aAAf,CAA6BR,WAA7B,EAAkD;AACvD,SAAOM,eAAe,GAACG,qBAAhB,CAAsCT,WAAtC,CAAP;AACD","sourcesContent":["import * as ProjectSettings from './ProjectSettings';\nimport XDLError from './XDLError';\nimport { assertValidProjectRoot } from './project/errors';\nimport { startTunnelsAsync, stopTunnelsAsync } from './start/ngrok';\nimport { StartOptions } from './start/startDevServerAsync';\nimport { startExpoServerAsync } from './start/startLegacyExpoServerAsync';\nimport {\n  startReactNativeServerAsync,\n  stopReactNativeServerAsync,\n} from './start/startLegacyReactNativeServerAsync';\n\nexport { startAsync, stopAsync } from './start/startAsync';\n\n/**\n * @deprecated Use `ProjectSettings.setPackagerInfoAsync`\n * @param projectRoot\n * @param options\n */\nexport async function setOptionsAsync(\n  projectRoot: string,\n  options: {\n    packagerPort?: number;\n  }\n): Promise<void> {\n  assertValidProjectRoot(projectRoot); // Check to make sure all options are valid\n  if (options.packagerPort != null && !Number.isInteger(options.packagerPort)) {\n    throw new XDLError('INVALID_OPTIONS', 'packagerPort must be an integer');\n  }\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, options);\n}\n\n/**\n * @deprecated `ProjectSettings.getCurrentStatusAsync`\n * @param projectRoot\n */\nexport async function currentStatus(projectRoot: string) {\n  return ProjectSettings.getCurrentStatusAsync(projectRoot);\n}\n\nexport {\n  startTunnelsAsync,\n  stopTunnelsAsync,\n  startExpoServerAsync,\n  StartOptions,\n  startReactNativeServerAsync,\n  stopReactNativeServerAsync,\n};\nexport { PublishedProjectResult, publishAsync } from './project/publishAsync';\nexport { exportAppAsync } from './project/exportAppAsync';\nexport { runHook } from './project/runHook';\nexport { mergeAppDistributions } from './project/mergeAppDistributions';\n"],"file":"../Project.js","sourceRoot":"/@expo/xdl@59.0.24/src"}