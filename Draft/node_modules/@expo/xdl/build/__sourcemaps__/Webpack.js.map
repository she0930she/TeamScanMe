{"version":3,"sources":["Webpack.ts"],"names":["WEBPACK_LOG_TAG","webpackDevServerInstance","webpackServerPort","restartAsync","projectRoot","options","stopAsync","startAsync","devServerInfo","printConnectionInstructions","appName","urls","showInDevtools","clearWebCacheAsync","mode","cacheFolder","path","join","ProjectUtils","logInfo","chalk","dim","fs","remove","deprecatedVerbose","XDLError","serverName","logError","red","fullOptions","transformCLIOptions","env","getWebpackConfigEnvFromBundlingOptionsAsync","clear","https","process","SSL_CRT_FILE","SSL_KEY_FILE","ssl","getSSLCertAsync","name","directory","certPath","keyPath","config","createWebpackConfigAsync","port","getAvailablePortAsync","defaultPort","underline","protocol","useYarn","getProjectNameAsync","nonInteractive","validateBoolOption","stdout","isTTY","server","Promise","resolve","compiler","webpackFactory","webpack","onFinished","WebpackDevServer","devServer","listen","HOST","error","message","onWebpackFinished","ProjectSettings","setPackagerInfoAsync","host","ip","address","url","res","close","openAsync","openProjectAsync","compileWebAppAsync","warnings","reject","run","stats","messages","errors","_showErrors","_showWarnings","toJson","all","length","Error","getenv","boolish","logWarning","yellow","bundleWebAppAsync","green","bundleAsync","offline","expoConfig","skipSDKVersionRequirement","exp","sdkVersion","Versions","lteSdkVersion","hasSWPlugin","plugins","find","item","constructor","webName","isRunning","getServer","getPort","getUrlAsync","getProtocolAsync","readAsync","DEFAULT_PORT","setMode","BABEL_ENV","NODE_ENV","value","defaultValue","isImageEditingEnabled","pwa","unimodulesOnly","withUnimodules","require","invokeWebpackConfigAsync","applyOptionsToProjectSettingsAsync","newSettings","Object","keys","setAsync","dev","webpackEnv","console","log","magenta","result","devcert","certificateFor","key","cert","folder","ensureDir","writeFile","applyEnvironmentVariables","bgYellow","black","output","optimization","devtoolLineToLine","pathinfo","namedModules","namedChunks","moduleIds","chunkIds","splitChunks","assign","argv","projectWebpackConfig","existsSync","webpackConfig","createExpoWebpackConfigAsync","UrlUtils","constructWebAppUrlAsync","hostType","success","e","Logger","global"],"mappings":"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","sourcesContent":["import { getConfig, getNameFromConfig } from '@expo/config';\nimport * as devcert from '@expo/devcert';\nimport { isUsingYarn } from '@expo/package-manager';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport getenv from 'getenv';\nimport http from 'http';\nimport * as path from 'path';\nimport { choosePort, prepareUrls, Urls } from 'react-dev-utils/WebpackDevServerUtils';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\nimport openBrowser from 'react-dev-utils/openBrowser';\nimport webpack from 'webpack';\nimport WebpackDevServer from 'webpack-dev-server';\n\nimport Logger from './Logger';\nimport * as ProjectSettings from './ProjectSettings';\nimport * as UrlUtils from './UrlUtils';\nimport * as Versions from './Versions';\nimport XDLError from './XDLError';\nimport ip from './ip';\nimport { learnMore } from './logs/TerminalLink';\nimport * as ProjectUtils from './project/ProjectUtils';\nimport { DEFAULT_PORT, HOST, isDebugModeEnabled } from './webpack-utils/WebpackEnvironment';\nimport createWebpackCompiler, { printInstructions } from './webpack-utils/createWebpackCompiler';\n\nconst WEBPACK_LOG_TAG = 'expo';\n\ntype DevServer = WebpackDevServer | http.Server;\n\nlet webpackDevServerInstance: DevServer | null = null;\nlet webpackServerPort: number | null = null;\n\ninterface WebpackSettings {\n  url: string;\n  server: DevServer;\n  port: number;\n  protocol: 'http' | 'https';\n  host?: string;\n}\n\ntype CLIWebOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  pwa?: boolean;\n  nonInteractive?: boolean;\n  port?: number;\n  unimodulesOnly?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype BundlingOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  pwa?: boolean;\n  isImageEditingEnabled?: boolean;\n  webpackEnv?: object;\n  mode?: 'development' | 'production' | 'test' | 'none';\n  https?: boolean;\n  nonInteractive?: boolean;\n  unimodulesOnly?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype WebpackConfiguration = webpack.Configuration;\n\nexport type WebEnvironment = {\n  projectRoot: string;\n  isImageEditingEnabled: boolean;\n  // deprecated\n  pwa: boolean;\n  mode: 'development' | 'production' | 'test' | 'none';\n  https: boolean;\n  offline?: boolean;\n};\n\nexport async function restartAsync(\n  projectRoot: string,\n  options: BundlingOptions = {}\n): Promise<WebpackSettings | null> {\n  await stopAsync(projectRoot);\n  return await startAsync(projectRoot, options);\n}\n\nlet devServerInfo: {\n  urls: Urls;\n  protocol: 'http' | 'https';\n  useYarn: boolean;\n  appName: string;\n  nonInteractive: boolean;\n  port: number;\n} | null = null;\n\nexport function printConnectionInstructions(projectRoot: string, options = {}) {\n  if (!devServerInfo) return;\n  printInstructions(projectRoot, {\n    appName: devServerInfo.appName,\n    urls: devServerInfo.urls,\n    showInDevtools: false,\n    ...options,\n  });\n}\n\nasync function clearWebCacheAsync(projectRoot: string, mode: string): Promise<void> {\n  const cacheFolder = path.join(projectRoot, '.expo', 'web', 'cache', mode);\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    chalk.dim(`Clearing ${mode} cache directory...`)\n  );\n  try {\n    await fs.remove(cacheFolder);\n  } catch {}\n}\n\nexport async function startAsync(\n  projectRoot: string,\n  options: CLIWebOptions = {},\n  deprecatedVerbose?: boolean\n): Promise<WebpackSettings | null> {\n  if (typeof deprecatedVerbose !== 'undefined') {\n    throw new XDLError(\n      'WEBPACK_DEPRECATED',\n      'startAsync(root, options, verbose): The `verbose` option is deprecated.'\n    );\n  }\n\n  const serverName = 'Webpack';\n\n  if (webpackDevServerInstance) {\n    ProjectUtils.logError(\n      projectRoot,\n      WEBPACK_LOG_TAG,\n      chalk.red(`${serverName} is already running.`)\n    );\n    return null;\n  }\n\n  const fullOptions = transformCLIOptions(options);\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, fullOptions);\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  if (env.https) {\n    if (!process.env.SSL_CRT_FILE || !process.env.SSL_KEY_FILE) {\n      const ssl = await getSSLCertAsync({\n        name: 'localhost',\n        directory: projectRoot,\n      });\n      if (ssl) {\n        process.env.SSL_CRT_FILE = ssl.certPath;\n        process.env.SSL_KEY_FILE = ssl.keyPath;\n      }\n    }\n  }\n\n  const config = await createWebpackConfigAsync(env, fullOptions);\n  const port = await getAvailablePortAsync({\n    defaultPort: options.port,\n  });\n\n  webpackServerPort = port;\n\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    `Starting ${serverName} on port ${webpackServerPort} in ${chalk.underline(env.mode)} mode.`\n  );\n\n  const protocol = env.https ? 'https' : 'http';\n  const urls = prepareUrls(protocol, '::', webpackServerPort);\n  const useYarn = isUsingYarn(projectRoot);\n  const appName = await getProjectNameAsync(projectRoot);\n  const nonInteractive = validateBoolOption(\n    'nonInteractive',\n    options.nonInteractive,\n    !process.stdout.isTTY\n  );\n\n  devServerInfo = {\n    urls,\n    protocol,\n    useYarn,\n    appName,\n    nonInteractive,\n    port: webpackServerPort!,\n  };\n\n  const server: DevServer = await new Promise(resolve => {\n    // Create a webpack compiler that is configured with custom messages.\n    const compiler = createWebpackCompiler({\n      projectRoot,\n      appName,\n      config,\n      urls,\n      nonInteractive,\n      webpackFactory: webpack,\n      onFinished: () => resolve(server),\n    });\n    const server = new WebpackDevServer(compiler, config.devServer);\n    // Launch WebpackDevServer.\n    server.listen(port, HOST, error => {\n      if (error) {\n        ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, error.message);\n      }\n      if (typeof options.onWebpackFinished === 'function') {\n        options.onWebpackFinished(error);\n      }\n    });\n    webpackDevServerInstance = server;\n  });\n\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    webpackServerPort,\n  });\n\n  const host = ip.address();\n  const url = `${protocol}://${host}:${port}`;\n  return {\n    url,\n    server,\n    port,\n    protocol,\n    host,\n  };\n}\n\nexport async function stopAsync(projectRoot: string): Promise<void> {\n  if (webpackDevServerInstance) {\n    await new Promise(res => {\n      if (webpackDevServerInstance) {\n        ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, '\\u203A Stopping Webpack server');\n        webpackDevServerInstance.close(res);\n      }\n    });\n    webpackDevServerInstance = null;\n    devServerInfo = null;\n    webpackServerPort = null;\n    await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n      webpackServerPort: null,\n    });\n  }\n}\n\nexport async function openAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  if (!webpackDevServerInstance) {\n    await startAsync(projectRoot, options);\n  }\n  await openProjectAsync(projectRoot);\n}\n\nexport async function compileWebAppAsync(\n  projectRoot: string,\n  compiler: webpack.Compiler\n): Promise<any> {\n  // We generate the stats.json file in the webpack-config\n  const { warnings } = await new Promise((resolve, reject) =>\n    compiler.run((error, stats) => {\n      let messages;\n      if (error) {\n        if (!error.message) {\n          return reject(error);\n        }\n        messages = formatWebpackMessages({\n          errors: [error.message],\n          warnings: [],\n          _showErrors: true,\n          _showWarnings: true,\n        });\n      } else {\n        messages = formatWebpackMessages(\n          stats.toJson({ all: false, warnings: true, errors: true })\n        );\n      }\n\n      if (messages.errors.length) {\n        // Only keep the first error. Others are often indicative\n        // of the same problem, but confuse the reader with noise.\n        if (messages.errors.length > 1) {\n          messages.errors.length = 1;\n        }\n        return reject(new Error(messages.errors.join('\\n\\n')));\n      }\n      if (\n        getenv.boolish('EXPO_WEB_BUILD_STRICT', false) &&\n        getenv.boolish('CI', false) &&\n        messages.warnings.length\n      ) {\n        ProjectUtils.logWarning(\n          projectRoot,\n          WEBPACK_LOG_TAG,\n          chalk.yellow(\n            '\\nTreating warnings as errors because `process.env.CI = true` and `process.env.EXPO_WEB_BUILD_STRICT = true`. \\n' +\n              'Most CI servers set it automatically.\\n'\n          )\n        );\n        return reject(new Error(messages.warnings.join('\\n\\n')));\n      }\n      resolve({\n        warnings: messages.warnings,\n      });\n    })\n  );\n  return { warnings };\n}\n\nexport async function bundleWebAppAsync(projectRoot: string, config: WebpackConfiguration) {\n  const compiler = webpack(config);\n\n  try {\n    const { warnings } = await compileWebAppAsync(projectRoot, compiler);\n    if (warnings.length) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        WEBPACK_LOG_TAG,\n        chalk.yellow('Compiled with warnings.\\n')\n      );\n      ProjectUtils.logWarning(projectRoot, WEBPACK_LOG_TAG, warnings.join('\\n\\n'));\n    } else {\n      ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, chalk.green('Compiled successfully.\\n'));\n    }\n  } catch (error) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, chalk.red('Failed to compile.\\n'));\n    throw error;\n  }\n}\n\nexport async function bundleAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  const fullOptions = transformCLIOptions({\n    ...options,\n  });\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, {\n    ...fullOptions,\n    // Force production\n    mode: 'production',\n  });\n\n  if (typeof env.offline === 'undefined') {\n    try {\n      const expoConfig = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n      // If offline isn't defined, check the version and keep offline enabled for SDK 38 and prior\n      if (expoConfig.exp.sdkVersion)\n        if (Versions.lteSdkVersion(expoConfig.exp, '38.0.0')) {\n          env.offline = true;\n        }\n    } catch {\n      // Ignore the error thrown by projects without an Expo config.\n    }\n  }\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  const config = await createWebpackConfigAsync(env, fullOptions);\n\n  await bundleWebAppAsync(projectRoot, config);\n\n  const hasSWPlugin = config.plugins?.find(item => {\n    return item?.constructor?.name === 'GenerateSW';\n  });\n  if (!hasSWPlugin) {\n    ProjectUtils.logInfo(\n      projectRoot,\n      WEBPACK_LOG_TAG,\n      chalk.green(\n        `Offline (PWA) support is not enabled in this build. ${chalk.dim(\n          learnMore('https://expo.fyi/enabling-web-service-workers')\n        )}\\n`\n      )\n    );\n  }\n}\n\nexport async function getProjectNameAsync(projectRoot: string): Promise<string> {\n  const { exp } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n  const webName = getNameFromConfig(exp).webName ?? exp.name;\n  return webName;\n}\n\nexport function isRunning(): boolean {\n  return !!webpackDevServerInstance;\n}\n\nexport function getServer(projectRoot: string): DevServer | null {\n  if (webpackDevServerInstance == null) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, 'Webpack is not running.');\n  }\n  return webpackDevServerInstance;\n}\n\nexport function getPort(): number | null {\n  return webpackServerPort;\n}\n\n/**\n * Get the URL for the running instance of Webpack dev server.\n *\n * @param projectRoot\n */\nexport async function getUrlAsync(projectRoot: string): Promise<string | null> {\n  const devServer = getServer(projectRoot);\n  if (!devServer) {\n    return null;\n  }\n  const host = ip.address();\n  const protocol = await getProtocolAsync(projectRoot);\n  return `${protocol}://${host}:${webpackServerPort}`;\n}\n\nasync function getProtocolAsync(projectRoot: string): Promise<'http' | 'https'> {\n  // TODO: Bacon: Handle when not in expo\n  const { https } = await ProjectSettings.readAsync(projectRoot);\n  return https === true ? 'https' : 'http';\n}\n\nasync function getAvailablePortAsync(\n  options: { host?: string; defaultPort?: number } = {}\n): Promise<number> {\n  try {\n    const defaultPort =\n      'defaultPort' in options && options.defaultPort ? options.defaultPort : DEFAULT_PORT;\n    const port = await choosePort(\n      'host' in options && options.host ? options.host : HOST,\n      defaultPort\n    );\n    if (!port) throw new Error(`Port ${defaultPort} not available.`);\n    else return port;\n  } catch (error) {\n    throw new XDLError('NO_PORT_FOUND', 'No available port found: ' + error.message);\n  }\n}\n\nfunction setMode(mode: 'development' | 'production' | 'test' | 'none'): void {\n  process.env.BABEL_ENV = mode;\n  process.env.NODE_ENV = mode;\n}\n\nfunction validateBoolOption(name: string, value: unknown, defaultValue: boolean): boolean {\n  if (typeof value === 'undefined') {\n    value = defaultValue;\n  }\n\n  if (typeof value !== 'boolean') {\n    throw new XDLError('WEBPACK_INVALID_OPTION', `'${name}' option must be a boolean.`);\n  }\n\n  return value;\n}\n\nfunction transformCLIOptions(options: CLIWebOptions): BundlingOptions {\n  // Transform the CLI flags into more explicit values\n  return {\n    ...options,\n    isImageEditingEnabled: options.pwa,\n  };\n}\n\nasync function createWebpackConfigAsync(\n  env: WebEnvironment,\n  options: CLIWebOptions = {}\n): Promise<WebpackConfiguration> {\n  setMode(env.mode);\n\n  let config;\n  if (options.unimodulesOnly) {\n    const { withUnimodules } = require('@expo/webpack-config/addons');\n    config = withUnimodules({}, env);\n  } else {\n    config = await invokeWebpackConfigAsync(env);\n  }\n\n  return config;\n}\n\nasync function applyOptionsToProjectSettingsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<ProjectSettings.Settings> {\n  const newSettings: Partial<ProjectSettings.Settings> = {};\n  // Change settings before reading them\n  if (typeof options.https === 'boolean') {\n    newSettings.https = options.https;\n  }\n\n  if (Object.keys(newSettings).length) {\n    await ProjectSettings.setAsync(projectRoot, newSettings);\n  }\n\n  return await ProjectSettings.readAsync(projectRoot);\n}\n\nasync function getWebpackConfigEnvFromBundlingOptionsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<WebEnvironment> {\n  const { dev, https } = await applyOptionsToProjectSettingsAsync(projectRoot, options);\n\n  const mode = typeof options.mode === 'string' ? options.mode : dev ? 'development' : 'production';\n\n  const isImageEditingEnabled = validateBoolOption(\n    'isImageEditingEnabled',\n    options.isImageEditingEnabled,\n    true\n  );\n\n  return {\n    projectRoot,\n    pwa: isImageEditingEnabled,\n    isImageEditingEnabled,\n    mode,\n    https,\n    ...(options.webpackEnv || {}),\n  };\n}\n\nasync function getSSLCertAsync({\n  name,\n  directory,\n}: {\n  name: string;\n  directory: string;\n}): Promise<{ keyPath: string; certPath: string } | false> {\n  console.log(\n    chalk.magenta`Ensuring auto SSL certificate is created (you might need to re-run with sudo)`\n  );\n  try {\n    const result = await devcert.certificateFor(name);\n    if (result) {\n      const { key, cert } = result;\n      const folder = path.join(directory, '.expo', 'web', 'development', 'ssl');\n      await fs.ensureDir(folder);\n\n      const keyPath = path.join(folder, `key-${name}.pem`);\n      await fs.writeFile(keyPath, key);\n\n      const certPath = path.join(folder, `cert-${name}.pem`);\n      await fs.writeFile(certPath, cert);\n\n      return {\n        keyPath,\n        certPath,\n      };\n    }\n    return result;\n  } catch (error) {\n    console.log(`Error creating SSL certificates: ${error}`);\n  }\n\n  return false;\n}\n\nfunction applyEnvironmentVariables(config: WebpackConfiguration): WebpackConfiguration {\n  // Use EXPO_DEBUG_WEB=true to enable debugging features for cases where the prod build\n  // has errors that aren't caught in development mode.\n  // Related: https://github.com/expo/expo-cli/issues/614\n  if (isDebugModeEnabled() && config.mode === 'production') {\n    console.log(chalk.bgYellow.black('Bundling the project in debug mode.'));\n\n    const output = config.output || {};\n    const optimization = config.optimization || {};\n\n    // Enable line to line mapped mode for all/specified modules.\n    // Line to line mapped mode uses a simple SourceMap where each line of the generated source is mapped to the same line of the original source.\n    // It’s a performance optimization. Only use it if your performance need to be better and you are sure that input lines match which generated lines.\n    // true enables it for all modules (not recommended)\n    output.devtoolLineToLine = true;\n\n    // Add comments that describe the file import/exports.\n    // This will make it easier to debug.\n    output.pathinfo = true;\n    // Instead of numeric ids, give modules readable names for better debugging.\n    optimization.namedModules = true;\n    // Instead of numeric ids, give chunks readable names for better debugging.\n    optimization.namedChunks = true;\n    // Readable ids for better debugging.\n    // @ts-ignore Property 'moduleIds' does not exist.\n    optimization.moduleIds = 'named';\n    // if optimization.namedChunks is enabled optimization.chunkIds is set to 'named'.\n    // This will manually enable it just to be safe.\n    // @ts-ignore Property 'chunkIds' does not exist.\n    optimization.chunkIds = 'named';\n\n    if (optimization.splitChunks) {\n      optimization.splitChunks.name = true;\n    }\n\n    Object.assign(config, { output, optimization });\n  }\n\n  return config;\n}\n\nexport async function invokeWebpackConfigAsync(\n  env: WebEnvironment,\n  argv?: string[]\n): Promise<WebpackConfiguration> {\n  // Check if the project has a webpack.config.js in the root.\n  const projectWebpackConfig = path.resolve(env.projectRoot, 'webpack.config.js');\n  let config: WebpackConfiguration;\n  if (fs.existsSync(projectWebpackConfig)) {\n    const webpackConfig = require(projectWebpackConfig);\n    if (typeof webpackConfig === 'function') {\n      config = await webpackConfig(env, argv);\n    } else {\n      config = webpackConfig;\n    }\n  } else {\n    // Fallback to the default expo webpack config.\n    const createExpoWebpackConfigAsync = require('@expo/webpack-config');\n    config = await createExpoWebpackConfigAsync(env, argv);\n  }\n  return applyEnvironmentVariables(config);\n}\n\nexport async function openProjectAsync(\n  projectRoot: string\n): Promise<{ success: true; url: string } | { success: false; error: Error }> {\n  try {\n    const url = await UrlUtils.constructWebAppUrlAsync(projectRoot, { hostType: 'localhost' });\n    if (!url) {\n      throw new Error('Webpack Dev Server is not running');\n    }\n    openBrowser(url);\n    return { success: true, url };\n  } catch (e) {\n    Logger.global.error(`Couldn't start project on web: ${e.message}`);\n    return { success: false, error: e };\n  }\n}\n"],"file":"../Webpack.js","sourceRoot":"/@expo/xdl@59.0.24/src"}