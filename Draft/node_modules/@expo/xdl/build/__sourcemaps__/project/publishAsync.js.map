{"version":3,"sources":["project/publishAsync.ts"],"names":["MINIMUM_BUNDLE_SIZE","buildPublishBundlesAsync","projectRoot","publishOptions","bundleOptions","useDevServer","options","nonPersistent","maxWorkers","target","reset","resetCache","verbose","quiet","fetchPublishBundlesAsync","isLegacy","skipSDKVersionRequirement","exp","platforms","android","ios","logger","ProjectUtils","getLogger","map","platform","entryPoint","dev","opts","publishUrl","UrlUtils","constructPublishUrlAsync","undefined","sourceMapUrl","constructSourceMapUrlAsync","assetsUrl","constructAssetsUrlAsync","global","info","iosBundle","_getForPlatformAsync","errorCode","minLength","androidBundle","iosSourceMap","androidSourceMap","iosAssetsJson","androidAssetsJson","code","assets","JSON","parse","url","fullUrl","response","axios","request","responseType","transformResponse","data","proxy","validateStatus","status","headers","error","body","e","logError","message","XDLError","length","publishAsync","user","UserManager","ensureLoggedInAsync","console","log","Analytics","logEvent","developerTool","Config","validationStatus","Doctor","validateWithNetworkAsync","ERROR","FATAL","pkg","hooks","isKernel","kind","validPostPublishHooks","bundles","files","push","chalk","dim","TableText","createFilesTable","hasHooks","shouldPublishAndroidMaps","publishSourceMapPath","shouldPublishIosMaps","_uploadArtifactsAsync","serverError","Error","Sentry","captureException","androidManifest","iosManifest","publishManifestPath","EmbeddedAssets","shouldEmbedAssetsForExpoUpdates","Promise","all","ExponentTools","getManifestAsync","sdkVersion","releaseChannel","Accept","hookOptions","msg","hook","file","warn","stack","fullManifestUrl","replace","configureAsync","iosManifestUrl","androidManifestUrl","_handleKernelPublishedAsync","formData","FormData","append","stringify","api","ApiV2","clientForUser","uploadFormDataAsync","kernelBundleUrl","scheme","host","port","username","slug","kernel","androidManifestPath","manifest","bundleUrl","fs","writeFile","path","resolve","iosManifestPath"],"mappings":"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","sourcesContent":["import {\n  ExpoAppManifest,\n  ExpoConfig,\n  getConfig,\n  getDefaultTarget,\n  isLegacyImportsEnabled,\n  PackageJSONConfig,\n  Platform,\n} from '@expo/config';\nimport { bundleAsync } from '@expo/dev-server';\nimport axios from 'axios';\nimport chalk from 'chalk';\nimport FormData from 'form-data';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport Analytics from '../Analytics';\nimport ApiV2 from '../ApiV2';\nimport Config from '../Config';\nimport * as EmbeddedAssets from '../EmbeddedAssets';\nimport { isDebug, shouldUseDevServer } from '../Env';\nimport { ErrorCode } from '../ErrorCode';\nimport logger from '../Logger';\nimport { publishAssetsAsync } from '../ProjectAssets';\nimport * as Sentry from '../Sentry';\nimport * as UrlUtils from '../UrlUtils';\nimport UserManager, { User } from '../User';\nimport XDLError from '../XDLError';\nimport * as ExponentTools from '../detach/ExponentTools';\nimport * as TableText from '../logs/TableText';\nimport { learnMore } from '../logs/TerminalLink';\nimport {\n  startReactNativeServerAsync,\n  stopReactNativeServerAsync,\n} from '../start/startLegacyReactNativeServerAsync';\nimport { resolveEntryPoint } from '../tools/resolveEntryPoint';\nimport * as Doctor from './Doctor';\nimport * as ProjectUtils from './ProjectUtils';\nimport { getPublishExpConfigAsync, PublishOptions } from './getPublishExpConfigAsync';\nimport { LoadedHook, prepareHooks, runHook } from './runHook';\n\nconst MINIMUM_BUNDLE_SIZE = 500;\n\ntype PackagerOptions = {\n  dev: boolean;\n  minify: boolean;\n};\n\nexport async function buildPublishBundlesAsync(\n  projectRoot: string,\n  publishOptions: PublishOptions = {},\n  bundleOptions: { dev?: boolean; useDevServer: boolean }\n) {\n  if (!bundleOptions.useDevServer) {\n    try {\n      await startReactNativeServerAsync({\n        projectRoot,\n        options: {\n          nonPersistent: true,\n          maxWorkers: publishOptions.maxWorkers,\n          target: publishOptions.target,\n          reset: publishOptions.resetCache,\n        },\n        verbose: !publishOptions.quiet,\n      });\n      return await fetchPublishBundlesAsync(projectRoot);\n    } finally {\n      await stopReactNativeServerAsync(projectRoot);\n    }\n  }\n\n  const isLegacy = isLegacyImportsEnabled(\n    getConfig(projectRoot, { skipSDKVersionRequirement: true }).exp\n  );\n  // If not legacy, delete the target option to prevent warnings from being thrown.\n  if (!isLegacy) {\n    delete publishOptions.target;\n  }\n  const platforms: Platform[] = ['android', 'ios'];\n  const [android, ios] = await bundleAsync(\n    projectRoot,\n    {\n      target: publishOptions.target,\n      resetCache: publishOptions.resetCache,\n      logger: ProjectUtils.getLogger(projectRoot),\n      quiet: publishOptions.quiet,\n    },\n    platforms.map((platform: Platform) => ({\n      platform,\n      entryPoint: resolveEntryPoint(projectRoot, platform),\n      dev: bundleOptions.dev,\n    }))\n  );\n\n  return {\n    android,\n    ios,\n  };\n}\n\n// Fetch iOS and Android bundles for publishing\nasync function fetchPublishBundlesAsync(projectRoot: string, opts?: PackagerOptions) {\n  const entryPoint = resolveEntryPoint(projectRoot);\n  const publishUrl = await UrlUtils.constructPublishUrlAsync(\n    projectRoot,\n    entryPoint,\n    undefined,\n    opts\n  );\n  const sourceMapUrl = await UrlUtils.constructSourceMapUrlAsync(projectRoot, entryPoint);\n  const assetsUrl = await UrlUtils.constructAssetsUrlAsync(projectRoot, entryPoint);\n\n  logger.global.info('Building iOS bundle');\n  const iosBundle = await _getForPlatformAsync(projectRoot, publishUrl, 'ios', {\n    errorCode: 'INVALID_BUNDLE',\n    minLength: MINIMUM_BUNDLE_SIZE,\n  });\n\n  logger.global.info('Building Android bundle');\n  const androidBundle = await _getForPlatformAsync(projectRoot, publishUrl, 'android', {\n    errorCode: 'INVALID_BUNDLE',\n    minLength: MINIMUM_BUNDLE_SIZE,\n  });\n\n  logger.global.info('Building source maps');\n  const iosSourceMap = await _getForPlatformAsync(projectRoot, sourceMapUrl, 'ios', {\n    errorCode: 'INVALID_BUNDLE',\n    minLength: MINIMUM_BUNDLE_SIZE,\n  });\n  const androidSourceMap = await _getForPlatformAsync(projectRoot, sourceMapUrl, 'android', {\n    errorCode: 'INVALID_BUNDLE',\n    minLength: MINIMUM_BUNDLE_SIZE,\n  });\n\n  logger.global.info('Building asset maps');\n  const iosAssetsJson = await _getForPlatformAsync(projectRoot, assetsUrl, 'ios', {\n    errorCode: 'INVALID_ASSETS',\n  });\n  const androidAssetsJson = await _getForPlatformAsync(projectRoot, assetsUrl, 'android', {\n    errorCode: 'INVALID_ASSETS',\n  });\n\n  return {\n    android: { code: androidBundle, map: androidSourceMap, assets: JSON.parse(androidAssetsJson) },\n    ios: { code: iosBundle, map: iosSourceMap, assets: JSON.parse(iosAssetsJson) },\n  };\n}\n\nasync function _getForPlatformAsync(\n  projectRoot: string,\n  url: string,\n  platform: Platform,\n  { errorCode, minLength }: { errorCode: ErrorCode; minLength?: number }\n): Promise<string> {\n  const fullUrl = `${url}&platform=${platform}`;\n  let response;\n\n  try {\n    response = await axios.request({\n      url: fullUrl,\n      responseType: 'text',\n      // Workaround for https://github.com/axios/axios/issues/907.\n      // Without transformResponse, axios will parse the body as JSON regardless of the responseType/\n      transformResponse: [data => data],\n      proxy: false,\n      validateStatus: status => status === 200,\n      headers: {\n        'Exponent-Platform': platform,\n      },\n    });\n  } catch (error) {\n    if (error.response) {\n      if (error.response.data) {\n        let body;\n        try {\n          body = JSON.parse(error.response.data);\n        } catch (e) {\n          ProjectUtils.logError(projectRoot, 'expo', error.response.data);\n        }\n\n        if (body) {\n          if (body.message) {\n            ProjectUtils.logError(projectRoot, 'expo', body.message);\n          } else {\n            ProjectUtils.logError(projectRoot, 'expo', error.response.data);\n          }\n        }\n      }\n      throw new XDLError(\n        errorCode,\n        `Packager URL ${fullUrl} returned unexpected code ${error.response.status}. ` +\n          'Please open your project in the Expo app and see if there are any errors. ' +\n          'Also scroll up and make sure there were no errors or warnings when opening your project.'\n      );\n    } else {\n      throw error;\n    }\n  }\n\n  if (!response.data || (minLength && response.data.length < minLength)) {\n    throw new XDLError(errorCode, `Body is: ${response.data}`);\n  }\n\n  return response.data;\n}\n\nexport interface PublishedProjectResult {\n  /**\n   * Project manifest URL\n   */\n  url: string;\n  /**\n   * TODO: What is this?\n   */\n  ids: string[];\n  /**\n   * TODO: What is this? Where does it come from?\n   */\n  err?: string;\n}\n\nexport async function publishAsync(\n  projectRoot: string,\n  options: PublishOptions = {}\n): Promise<PublishedProjectResult> {\n  options.target = options.target ?? getDefaultTarget(projectRoot);\n  const target = options.target;\n  const user = await UserManager.ensureLoggedInAsync();\n\n  if (isDebug()) {\n    console.log();\n    console.log('Publish Assets:');\n    console.log(`- Asset target: ${target}`);\n    console.log();\n  }\n\n  Analytics.logEvent('Publish', {\n    projectRoot,\n    developerTool: Config.developerTool,\n  });\n\n  const validationStatus = await Doctor.validateWithNetworkAsync(projectRoot);\n  if (validationStatus === Doctor.ERROR || validationStatus === Doctor.FATAL) {\n    throw new XDLError(\n      'PUBLISH_VALIDATION_ERROR',\n      \"Couldn't publish because errors were found. (See logs above.) Please fix the errors and try again.\"\n    );\n  }\n\n  // Get project config\n  const { exp, pkg, hooks } = await getPublishExpConfigAsync(projectRoot, options);\n\n  // Exit early if kernel builds are created with robot users\n  if (exp.isKernel && user.kind === 'robot') {\n    throw new XDLError('ROBOT_ACCOUNT_ERROR', 'Kernel builds are not available for robot users');\n  }\n\n  // TODO: refactor this out to a function, throw error if length doesn't match\n  const validPostPublishHooks: LoadedHook[] = prepareHooks(hooks, 'postPublish', projectRoot);\n  const bundles = await buildPublishBundlesAsync(projectRoot, options, {\n    useDevServer: shouldUseDevServer(exp),\n  });\n  const androidBundle = bundles.android.code;\n  const iosBundle = bundles.ios.code;\n\n  const files = [\n    ['index.ios.js', bundles.ios.code],\n    ['index.android.js', bundles.android.code],\n  ];\n  // Account for inline source maps\n  if (bundles.ios.map) {\n    files.push([chalk.dim('index.ios.js.map'), bundles.ios.map]);\n  }\n  if (bundles.android.map) {\n    files.push([chalk.dim('index.android.js.map'), bundles.android.map]);\n  }\n\n  logger.global.info('');\n  logger.global.info(TableText.createFilesTable(files));\n  logger.global.info('');\n  logger.global.info(\n    `💡 JavaScript bundle sizes affect startup time. ${chalk.dim(\n      learnMore(`https://expo.fyi/javascript-bundle-sizes`)\n    )}`\n  );\n  logger.global.info('');\n\n  await publishAssetsAsync({ projectRoot, exp, bundles });\n\n  const hasHooks = validPostPublishHooks.length > 0;\n\n  const shouldPublishAndroidMaps = !!exp.android?.publishSourceMapPath;\n  const shouldPublishIosMaps = !!exp.ios?.publishSourceMapPath;\n  const androidSourceMap = hasHooks || shouldPublishAndroidMaps ? bundles.android.map : null;\n  const iosSourceMap = hasHooks || shouldPublishIosMaps ? bundles.ios.map : null;\n\n  let response;\n  try {\n    response = await _uploadArtifactsAsync({\n      pkg,\n      exp,\n      iosBundle,\n      androidBundle,\n      options,\n    });\n  } catch (e) {\n    if (e.serverError === 'SCHEMA_VALIDATION_ERROR') {\n      throw new Error(\n        `There was an error validating your project schema. Check for any warnings about the contents of your app.json or app.config.js.`\n      );\n    }\n    Sentry.captureException(e);\n    throw e;\n  }\n\n  let androidManifest = {};\n  let iosManifest = {};\n\n  if (\n    validPostPublishHooks.length ||\n    exp.ios?.publishManifestPath ||\n    exp.android?.publishManifestPath ||\n    EmbeddedAssets.shouldEmbedAssetsForExpoUpdates(projectRoot, exp, pkg, target)\n  ) {\n    [androidManifest, iosManifest] = await Promise.all([\n      ExponentTools.getManifestAsync(response.url, {\n        'Exponent-SDK-Version': exp.sdkVersion,\n        'Exponent-Platform': 'android',\n        'Expo-Release-Channel': options.releaseChannel,\n        Accept: 'application/expo+json,application/json',\n      }),\n      ExponentTools.getManifestAsync(response.url, {\n        'Exponent-SDK-Version': exp.sdkVersion,\n        'Exponent-Platform': 'ios',\n        'Expo-Release-Channel': options.releaseChannel,\n        Accept: 'application/expo+json,application/json',\n      }),\n    ]);\n\n    const hookOptions = {\n      url: response.url,\n      exp,\n      iosBundle,\n      iosSourceMap,\n      iosManifest,\n      androidBundle,\n      androidSourceMap,\n      androidManifest,\n      projectRoot,\n      log: (msg: any) => {\n        logger.global.info({ quiet: true }, msg);\n      },\n    };\n\n    for (const hook of validPostPublishHooks) {\n      logger.global.info(`Running postPublish hook: ${hook.file}`);\n      try {\n        runHook(hook, hookOptions);\n      } catch (e) {\n        logger.global.warn(`Warning: postPublish hook '${hook.file}' failed: ${e.stack}`);\n      }\n    }\n  }\n\n  const fullManifestUrl = response.url.replace('exp://', 'https://');\n  await EmbeddedAssets.configureAsync({\n    projectRoot,\n    pkg,\n    exp,\n    releaseChannel: options.releaseChannel ?? 'default',\n    iosManifestUrl: fullManifestUrl,\n    iosManifest,\n    iosBundle,\n    iosSourceMap,\n    androidManifestUrl: fullManifestUrl,\n    androidManifest,\n    androidBundle,\n    androidSourceMap,\n    target,\n  });\n\n  // TODO: move to postPublish hook\n  // This method throws early when a robot account is used for a kernel build\n  if (exp.isKernel && user.kind !== 'robot') {\n    await _handleKernelPublishedAsync({\n      user,\n      exp,\n      projectRoot,\n      url: response.url,\n    });\n  }\n\n  return {\n    ...response,\n    url:\n      options.releaseChannel && options.releaseChannel !== 'default'\n        ? `${response.url}?release-channel=${options.releaseChannel}`\n        : response.url,\n  };\n}\n\nasync function _uploadArtifactsAsync({\n  exp,\n  iosBundle,\n  androidBundle,\n  options,\n  pkg,\n}: {\n  exp: ExpoConfig;\n  iosBundle: string;\n  androidBundle: string;\n  options: PublishOptions;\n  pkg: PackageJSONConfig;\n}) {\n  logger.global.info('');\n  logger.global.info('Uploading JavaScript bundles');\n  const formData = new FormData();\n\n  formData.append('expJson', JSON.stringify(exp));\n  formData.append('packageJson', JSON.stringify(pkg));\n  formData.append('iosBundle', iosBundle, 'iosBundle');\n  formData.append('androidBundle', androidBundle, 'androidBundle');\n  formData.append('options', JSON.stringify(options));\n\n  const user = await UserManager.ensureLoggedInAsync();\n  const api = ApiV2.clientForUser(user);\n\n  return await api.uploadFormDataAsync('publish/new', formData);\n}\n\nasync function _handleKernelPublishedAsync({\n  projectRoot,\n  user,\n  exp,\n  url,\n}: {\n  projectRoot: string;\n  user: User;\n  exp: ExpoAppManifest;\n  url: string;\n}) {\n  let kernelBundleUrl = `${Config.api.scheme}://${Config.api.host}`;\n  if (Config.api.port) {\n    kernelBundleUrl = `${kernelBundleUrl}:${Config.api.port}`;\n  }\n  kernelBundleUrl = `${kernelBundleUrl}/@${user.username}/${exp.slug}/bundle`;\n\n  if (exp.kernel?.androidManifestPath) {\n    const manifest = await ExponentTools.getManifestAsync(url, {\n      'Exponent-SDK-Version': exp.sdkVersion,\n      'Exponent-Platform': 'android',\n      Accept: 'application/expo+json,application/json',\n    });\n    manifest.bundleUrl = kernelBundleUrl;\n    manifest.sdkVersion = 'UNVERSIONED';\n    await fs.writeFile(\n      path.resolve(projectRoot, exp.kernel.androidManifestPath),\n      JSON.stringify(manifest)\n    );\n  }\n\n  if (exp.kernel?.iosManifestPath) {\n    const manifest = await ExponentTools.getManifestAsync(url, {\n      'Exponent-SDK-Version': exp.sdkVersion,\n      'Exponent-Platform': 'ios',\n      Accept: 'application/expo+json,application/json',\n    });\n    manifest.bundleUrl = kernelBundleUrl;\n    manifest.sdkVersion = 'UNVERSIONED';\n    await fs.writeFile(\n      path.resolve(projectRoot, exp.kernel.iosManifestPath),\n      JSON.stringify(manifest)\n    );\n  }\n}\n"],"file":"../../project/publishAsync.js","sourceRoot":"/@expo/xdl@59.0.24/src"}